{
	"compiler": {
		"version": "0.6.12+commit.27d51765"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			},
			{
				"inputs": [],
				"name": "destroy",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address payable",
						"name": "_recipient",
						"type": "address"
					}
				],
				"name": "destroyAndSend",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address payable",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "renounceOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address payable",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"details": "Base contract that can be destroyed by owner. All funds in contract will be sent to the owner.",
			"kind": "dev",
			"methods": {
				"destroy()": {
					"details": "Transfers the current balance to the owner and terminates the contract."
				},
				"owner()": {
					"details": "Returns the address of the current owner."
				},
				"renounceOwnership()": {
					"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
				},
				"transferOwnership(address)": {
					"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
				}
			},
			"title": "Destructible",
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"lib/HRC20.sol": "Destructible"
		},
		"evmVersion": "istanbul",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": true,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"lib/HRC20.sol": {
			"keccak256": "0x68edb6029d3e7d8f3bd1a15dce32a8420eeda6dea3354978cc2be473efbb358a",
			"license": "MIT",
			"urls": [
				"bzz-raw://b6fca1f876b563b1fd620dc6b081977417e35d6d73007d7da51584bf30c592b5",
				"dweb:/ipfs/QmSPtyvnTKo6WfR3LHniYrv35dyPGMceofo6zvv7YSjznp"
			]
		},
		"lib/SafeMath.sol": {
			"keccak256": "0x34ddddbb070730db7d9c63a537344145b22bb8242a392b9bb4aa21f8993ecdfb",
			"license": "MIT",
			"urls": [
				"bzz-raw://57c5f40371daf051474ba4fdb55b5c4939201dc9977ef54497fbb26f24ec2286",
				"dweb:/ipfs/QmbFwtkVihc4XXi4pQBenrB8opAEppqYopR2zCLerfwFbz"
			]
		},
		"lib/TransferHelper.sol": {
			"keccak256": "0x735370a0946ff53f41763480bc6c2cd5703301d36926adfde1ca9efe778ed6cf",
			"license": "MIT",
			"urls": [
				"bzz-raw://c852563287d97c8bc2ca93c60570275dda9785be9f096a6a3bf8aa7dbb9e7a86",
				"dweb:/ipfs/Qmb9uH7CmWS4xbjX7UTZcqE1ejxf4ecQqKdaq7Xz813FFx"
			]
		}
	},
	"version": 1
}